PS(1)                     BSD General Commands Manual                    PS(1)

NNAAMMEE
     ppss -- process status

SSYYNNOOPPSSIISS
     ppss [--AAaaCCccEEeeffhhjjllMMmmrrSSTTvvwwXXxx] [--OO _f_m_t | --oo _f_m_t] [--GG _g_i_d[,_g_i_d_._._.]]
        [--gg _g_r_p[,_g_r_p_._._.]] [--uu _u_i_d[,_u_i_d_._._.]] [--pp _p_i_d[,_p_i_d_._._.]]
        [--tt _t_t_y[,_t_t_y_._._.]] [--UU _u_s_e_r[,_u_s_e_r_._._.]]
     ppss [--LL]

DDEESSCCRRIIPPTTIIOONN
     The ppss utility displays a header line, followed by lines containing
     information about all of your processes that have controlling terminals.

     A different set of processes can be selected for display by using any
     combination of the --aa, --GG, --gg, --pp, --TT, --tt, --UU, and --uu options.  If more
     than one of these options are given, then ppss will select all processes
     which are matched by at least one of the given options.

     For the processes which have been selected for display, ppss will usually
     display one line per process.  The --MM option may result in multiple out-
     put lines (one line per thread) for some processes.  By default all of
     these output lines are sorted first by controlling terminal, then by
     process ID.  The --mm, --rr, and --vv options will change the sort order.  If
     more than one sorting option was given, then the selected processes will
     be sorted by the last sorting option which was specified.

     For the processes which have been selected for display, the information
     to display is selected based on a set of keywords (see the --LL, --OO, and --oo
     options).  The default output format includes, for each process, the
     process' ID, controlling terminal, CPU time (including both user and sys-
     tem time), state, and associated command.

     The options are as follows:

     --AA      Display information about other users' processes, including those
             without controlling terminals.

     --aa      Display information about other users' processes as well as your
             own.  This will skip any processes which do not have a control-
             ling terminal, unless the --xx option is also specified.

     --CC      Change the way the CPU percentage is calculated by using a
             ``raw'' CPU calculation that ignores ``resident'' time (this nor-
             mally has no effect).

     --cc      Change the ``command'' column output to just contain the exe-
             cutable name, rather than the full command line.

     --dd      Like --AA, but excludes session leaders.

     --EE      Display the environment as well.

     --ee      Identical to --AA.

     --ff      Display the uid, pid, parent pid, recent CPU usage, process start
             time, controling tty, elapsed CPU usage, and the associated com-
             mand.  If the --uu option is also used, display the user name
             rather then the numeric uid.  When --oo or --OO is used to add to the
             display following --ff, the command field is not truncated as se-
             verely as it is in other formats.

     --GG      Display information about processes which are running with the
             specified real group IDs.

     --gg      Display information about processes with the specified process
             group leaders.

     --hh      Repeat the information header as often as necessary to guarantee
             one header per page of information.

     --jj      Print information associated with the following keywords: uusseerr,
             ppiidd, ppppiidd, ppggiidd, sseessss, jjoobbcc, ssttaattee, tttt, ttiimmee, and ccoommmmaanndd.

     --LL      List the set of keywords available for the --OO and --oo options.

     --ll      Display information associated with the following keywords: uuiidd,
             ppiidd, ppppiidd, ffllaaggss, ccppuu, pprrii, nniiccee, vvsszz==SSZZ, rrssss, wwcchhaann, ssttaattee==SS,
             ppaaddddrr==AADDDDRR, ttttyy, ttiimmee, and ccoommmmaanndd==CCMMDD.

     --MM      Print the threads corresponding to each task.

     --mm      Sort by memory usage, instead of the combination of controlling
             terminal and process ID.

     --OO      Add the information associated with the space or comma separated
             list of keywords specified, after the process ID, in the default
             information display.  Keywords may be appended with an equals
             (`=') sign and a string.  This causes the printed header to use
             the specified string instead of the standard header.

     --oo      Display information associated with the space or comma separated
             list of keywords specified.  Multiple keywords may also be given
             in the form of more than one --oo option.  Keywords may be appended
             with an equals (`=') sign and a string.  This causes the printed
             header to use the specified string instead of the standard
             header.  If all keywords have empty header texts, no header line
             is written.

     --pp      Display information about processes which match the specified
             process IDs.

     --rr      Sort by current CPU usage, instead of the combination of control-
             ling terminal and process ID.

     --SS      Change the way the process time is calculated by summing all
             exited children to their parent process.

     --TT      Display information about processes attached to the device asso-
             ciated with the standard input.

     --tt      Display information about processes attached to the specified
             terminal devices.

     --UU      Display the processes belonging to the specified real user IDs.

     --uu      Display the processes belonging to the specified usernames.

     --vv      Display information associated with the following keywords: ppiidd,
             ssttaattee, ttiimmee, ssll, rree, ppaaggeeiinn, vvsszz, rrssss, lliimm, ttssiizz, %%ccppuu, %%mmeemm, and
             ccoommmmaanndd.  The --vv option implies the --mm option.

     --ww      Use 132 columns to display information, instead of the default
             which is your window size.  If the --ww option is specified more
             than once, ppss will use as many columns as necessary without
             regard for your window size.  When output is not to a terminal,
             an unlimited number of columns are always used.

     --XX      When displaying processes matched by other options, skip any pro-
             cesses which do not have a controlling terminal.

     --xx      When displaying processes matched by other options, include pro-
             cesses which do not have a controlling terminal.  This is the
             opposite of the --XX option.  If both --XX and --xx are specified in
             the same command, then ppss will use the one which was specified
             last.

     A complete list of the available keywords is given below.  Some of these
     keywords are further specified as follows:

     %%ccppuu      The CPU utilization of the process; this is a decaying average
               over up to a minute of previous (real) time.  Because the time
               base over which this is computed varies (some processes may be
               very young), it is possible for the sum of all %%ccppuu fields to
               exceed 100%.

     %%mmeemm      The percentage of real memory used by this process.

     ffllaaggss     The flags associated with the process as in the include file
               <_s_y_s_/_p_r_o_c_._h>:

               P_ADVLOCK           0x00001      Process may hold a POSIX
                                                advisory lock
               P_CONTROLT          0x00002      Has a controlling terminal
               P_LP64              0x00004      Process is LP64
               P_NOCLDSTOP         0x00008      No SIGCHLD when children stop
               P_PPWAIT            0x00010      Parent is waiting for child to
                                                exec/exit
               P_PROFIL            0x00020      Has started profiling
               P_SELECT            0x00040      Selecting; wakeup/waiting
                                                danger
               P_CONTINUED         0x00080      Process was stopped and
                                                continued
               P_SUGID             0x00100      Had set id privileges since
                                                last exec
               P_SYSTEM            0x00200      System proc: no sigs, stats or
                                                swapping
               P_TIMEOUT           0x00400      Timing out during sleep
               P_TRACED            0x00800      Debugged process being traced
               P_WAITED            0x01000      Debugging process has waited
                                                for child
               P_WEXIT             0x02000      Working on exiting
               P_EXEC              0x04000      Process called exec
               P_OWEUPC            0x08000      Owe process an addupc() call
                                                at next ast
               P_WAITING           0x40000      Process has a wait() in
                                                progress
               P_KDEBUG            0x80000        Kdebug tracing on for this
                                                process

     lliimm       The soft limit on memory used, specified via a call to
               setrlimit(2).

     llssttaarrtt    The exact time the command started, using the `%c' format
               described in strftime(3).

     nniiccee      The process scheduling increment (see setpriority(2)).

     rrssss       the real memory (resident set) size of the process (in 1024
               byte units).

     ssttaarrtt     The time the command started.  If the command started less than
               24 hours ago, the start time is displayed using the
               ``%l:ps.1p'' format described in strftime(3).  If the command
               started less than 7 days ago, the start time is displayed using
               the ``%a6.15p'' format.  Otherwise, the start time is displayed
               using the ``%e%b%y'' format.

     ssttaattee     The state is given by a sequence of characters, for example,
               ``RWNA''.  The first character indicates the run state of the
               process:

               I       Marks a process that is idle (sleeping for longer than
                       about 20 seconds).
               R       Marks a runnable process.
               S       Marks a process that is sleeping for less than about 20
                       seconds.
               T       Marks a stopped process.
               U       Marks a process in uninterruptible wait.
               Z       Marks a dead process (a ``zombie'').

               Additional characters after these, if any, indicate additional
               state information:

               +       The process is in the foreground process group of its
                       control terminal.
               <       The process has raised CPU scheduling priority.
               >       The process has specified a soft limit on memory
                       requirements and is currently exceeding that limit;
                       such a process is (necessarily) not swapped.
               A       the process has asked for random page replacement
                       (VA_ANOM, from vadvise(2), for example, lisp(1) in a
                       garbage collect).
               E       The process is trying to exit.
               L       The process has pages locked in core (for example, for
                       raw I/O).
               N       The process has reduced CPU scheduling priority (see
                       setpriority(2)).
               S       The process has asked for FIFO page replacement
                       (VA_SEQL, from vadvise(2), for example, a large image
                       processing program using virtual memory to sequentially
                       address voluminous data).
               s       The process is a session leader.
               V       The process is suspended during a vfork(2).
               W       The process is swapped out.
               X       The process is being traced or debugged.

     tttt        An abbreviation for the pathname of the controlling terminal,
               if any.  The abbreviation consists of the three letters follow-
               ing _/_d_e_v_/_t_t_y, or, for the console, ``con''.  This is followed
               by a `-' if the process can no longer reach that controlling
               terminal (i.e., it has been revoked).

     wwcchhaann     The event (an address in the system) on which a process waits.
               When printed numerically, the initial part of the address is
               trimmed off and the result is printed in hex, for example,
               0x80324000 prints as 324000.

     When printing using the command keyword, a process that has exited and
     has a parent that has not yet waited for the process (in other words, a
     zombie) is listed as ``<defunct>'', and a process which is blocked while
     trying to exit is listed as ``<exiting>''.  If the arguments cannot be
     located (usually because it has not been set, as is the case of system
     processes and/or kernel threads) the command name is printed within
     square brackets.  The process can change the arguments shown with
     setproctitle(3).  Otherwise, ppss makes an educated guess as to the file
     name and arguments given when the process was created by examining memory
     or the swap area.  The method is inherently somewhat unreliable and in
     any event a process is entitled to destroy this information.  The ucomm
     (accounting) keyword can, however, be depended on.  If the arguments are
     unavailable or do not agree with the ucomm keyword, the value for the
     ucomm keyword is appended to the arguments in parentheses.

KKEEYYWWOORRDDSS
     The following is a complete list of the available keywords and their
     meanings.  Several of them have aliases (keywords which are synonyms).

     %%ccppuu       percentage CPU usage (alias ppccppuu)
     %%mmeemm       percentage memory usage (alias ppmmeemm)
     aaccffllaagg     accounting flag (alias aaccffllgg)
     aarrggss       command and arguments
     ccoommmm       command
     ccoommmmaanndd    command and arguments
     ccppuu        short-term CPU usage factor (for scheduling)
     eettiimmee      elapsed running time
     ffllaaggss      the process flags, in hexadecimal (alias ff)
     ggiidd        processes group id (alias ggrroouupp)
     iinnbbllkk      total blocks read (alias iinnbblloocckk)
     jjoobbcc       job control count
     kkttrraaccee     tracing flags
     kkttrraacceepp    tracing vnode
     lliimm        memoryuse limit
     llooggnnaammee    login name of user who started the session
     llssttaarrtt     time started
     mmaajjfflltt     total page faults
     mmiinnfflltt     total page reclaims
     mmssggrrccvv     total messages received (reads from pipes/sockets)
     mmssggssnndd     total messages sent (writes on pipes/sockets)
     nniiccee       nice value (alias nnii)
     nniivvccssww     total involuntary context switches
     nnssiiggss      total signals taken (alias nnssiiggnnaallss)
     nnsswwaapp      total swaps in/out
     nnvvccssww      total voluntary context switches
     nnwwcchhaann     wait channel (as an address)
     oouubbllkk      total blocks written (alias oouubblloocckk)
     pp__rruu       resource usage (valid only for zombie)
     ppaaddddrr      swap address
     ppaaggeeiinn     pageins (same as majflt)
     ppggiidd       process group number
     ppiidd        process ID
     ppppiidd       parent process ID
     pprrii        scheduling priority
     rree         core residency time (in seconds; 127 = infinity)
     rrggiidd       real group ID
     rrssss        resident set size
     rruuiidd       real user ID
     rruusseerr      user name (from ruid)
     sseessss       session ID
     ssiigg        pending signals (alias ppeennddiinngg)
     ssiiggmmaasskk    blocked signals (alias bblloocckkeedd)
     ssll         sleep time (in seconds; 127 = infinity)
     ssttaarrtt      time started
     ssttaattee      symbolic process state (alias ssttaatt)
     ssvvggiidd      saved gid from a setgid executable
     ssvvuuiidd      saved UID from a setuid executable
     ttddeevv       control terminal device number
     ttiimmee       accumulated CPU time, user + system (alias ccppuuttiimmee)
     ttppggiidd      control terminal process group ID
     ttsseessss      control terminal session ID
     ttssiizz       text size (in Kbytes)
     tttt         control terminal name (two letter abbreviation)
     ttttyy        full name of control terminal
     uuccoommmm      name to be used for accounting
     uuiidd        effective user ID
     uupprr        scheduling priority on return from system call (alias uussrrpprrii)
     uusseerr       user name (from UID)
     uuttiimmee      user CPU time (alias ppuuttiimmee)
     vvsszz        virtual size in Kbytes (alias vvssiizzee)
     wwcchhaann      wait channel (as a symbolic name)
     wwqq         total number of workqueue threads
     wwqqbb        number of blocked workqueue threads
     wwqqrr        number of running workqueue threads
     xxssttaatt      exit or stop status (valid only for stopped or zombie process)

EENNVVIIRROONNMMEENNTT
     The following environment variables affect the execution of ppss:

     COLUMNS  If set, specifies the user's preferred output width in column
              positions.  By default, ppss attempts to automatically determine
              the terminal width.

FFIILLEESS
     /dev                 special files and device names
     /var/run/dev.db      /dev name database
     /var/db/kvm_kernel.db
                          system namelist database

LLEEGGAACCYY DDEESSCCRRIIPPTTIIOONN
     In legacy mode, ppss functions as described above, with the following dif-
     ferences:

     --ee      Display the environment as well. Same as --EE.

     --gg      Ignored for compatibility. Takes no argument.

     --ll      Display information associated with the following keywords: uuiidd,
             ppiidd, ppppiidd, ccppuu, pprrii, nniiccee, vvsszz, rrssss, wwcchhaann, ssttaattee, tttt,, ttiimmee, and
             ccoommmmaanndd.

     --uu      Display information associated with the following keywords: uusseerr,
             ppiidd, %%ccppuu, %%mmeemm, vvsszz, rrssss, tttt, ssttaattee, ssttaarrtt, ttiimmee, and ccoommmmaanndd.
             The --uu option implies the --rr option.

     The biggest change is in the interpretation of the --uu option, which now
     displays processes belonging to the specified username(s).  Thus, "ps
     -aux" will fail (unless you want to know about user "x").  As a conve-
     nience, however, "ps aux" still works as it did in Tiger.

     For more information about legacy mode, see compat(5).

SSEEEE AALLSSOO
     kill(1), w(1), kvm(3), strftime(3), sysctl(8)

SSTTAANNDDAARRDDSS
     The ppss utility supports the Version 3 of the Single UNIX Specification
     (``SUSv3'') standard.

HHIISSTTOORRYY
     The ppss command appeared in Version 4 AT&T UNIX.

BBUUGGSS
     Since ppss cannot run faster than the system and is run as any other sched-
     uled process, the information it displays can never be exact.

     The ppss utility does not correctly display argument lists containing
     multibyte characters.

BSD                             March 20, 2005                             BSD
total 104
-rw-r--r--  1 ynonperek  staff    305 Oct  3 14:23 backup.csh
drwxr-xr-x  2 ynonperek  staff     68 Oct  3 15:22 bar
drwxr-xr-x  2 ynonperek  staff     68 Oct  3 15:22 d9
-rw-r--r--  1 ynonperek  staff  20996 Oct  3 15:22 file
drwxr-xr-x  2 ynonperek  staff     68 Oct  3 15:22 foo
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 foo_bar
-rw-r--r--  1 ynonperek  staff    184 Oct  3 14:15 mass_rename.csh
-rw-r--r--  1 ynonperek  staff    259 Oct  3 10:08 mkdirp.csh
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 name_with_spaces
-rwxr-xr-x  1 ynonperek  staff    170 Oct  3 14:21 rev.csh
-rw-r--r--  1 ynonperek  staff    296 Oct  3 14:11 wait_for_user.csh
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 x
-rw-r--r--  1 ynonperek  staff     22 Oct  3 10:08 x0
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 x10
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 x2
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 x4
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 x6
-rw-r--r--  1 ynonperek  staff      0 Oct  3 10:08 x8
lrwxr-xr-x  1 ynonperek  staff      1 Oct  3 10:08 y -> x
